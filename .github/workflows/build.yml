name: Build for Windows

on:
  push:
    tags:
      - v*
  workflow_dispatch:
    inputs:
      version:
        description: 'リリースバージョン (例: v1.0.0)'
        required: true
        default: 'v1.0.0'
      release_notes:
        description: 'リリースノート'
        required: false
        default: '新機能と改善点'

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: 🔨 Build PyInstaller bootloader
      run: |
        git clone https://github.com/pyinstaller/pyinstaller.git
        cd pyinstaller/bootloader
        python ./waf distclean all
        cd ..
        pip install -e .
        
    - name: 🚀 Build EXE with Flet Pack
      run: |
        flet pack .\main.py --name YTMDOWN --onedir --product-name YTMDOWN --copyright samenoko-112 -y

    # 👇 ここから Inno Setup 関連 👇

    - name: 🧩 Generate version.iss
      run: |
        Set-Content -Path "version.iss" -Value "#define AppVersion `"${{ github.event.inputs.version }}`""
      shell: pwsh

    - name: 📦 Compile Installer with Inno Setup
      uses: Minionguyjpro/Inno-Setup-Action@v1.2.7  # 最新版
      with:
        path: installer.iss
        options: /O+ /Q  # 最適化 + クワイエット

    - name: 🏷️ Rename Installer
      run: |
        $installer = Get-ChildItem -Path "installer_output" -Filter "*.exe" -Recurse | Select-Object -First 1
        if ($installer) {
          $newName = "YTMDOWN-Setup-${{ github.event.inputs.version }}.exe"
          Rename-Item -Path $installer.FullName -NewName $newName
          Move-Item -Path "installer_output\$newName" -Destination "./$newName" -Force
        } else {
          Write-Error "インストーラーが見つかりません。installer.iss を確認してください。"
          exit 1
        }

    - name: 🗜️ Create ZIP Archive
      run: |
        Compress-Archive -Path dist/YTMDOWN/* -DestinationPath dist/YTMDOWN-${{ github.event.inputs.version }}-windows.zip
        
    - name: 📤 Upload Artifacts (ZIP + Installer)
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: |
          dist/YTMDOWN-${{ github.event.inputs.version }}-windows.zip
          YTMDOWN-Setup-${{ github.event.inputs.version }}.exe  # ← インストーラーも含める

  create-release:
    needs: [build-windows]
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Download Artifacts
      uses: actions/download-artifact@v4
      with:
        name: windows-build
        
    - name: 🏷️ Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.event.inputs.version }}
        name: YTMDOWN ${{ github.event.inputs.version }}
        body: ${{ github.event.inputs.release_notes }}
        draft: true
        prerelease: false
        files: |
          YTMDOWN-${{ github.event.inputs.version }}-windows.zip
          YTMDOWN-Setup-${{ github.event.inputs.version }}.exe  # ← インストーラーもリリースに添付
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: 🧹 Cleanup Artifacts
      uses: geekyeggo/delete-artifact@v5
      with:
        name: windows-build
        failOnError: false